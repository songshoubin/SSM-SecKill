<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 配置整合mybatis -->
    <!-- 配置数据库相关 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    	<property value="com.mysql.jdbc.Driver" name="driverClass"/>
		<property value="jdbc:mysql://localhost:3306/seckill?useUnicode=true&amp;characterEncoding=UTF-8" name="jdbcUrl"/>
		<property value="root" name="user"/>
		<property value="123456" name="password"/>
        <property name="maxPoolSize" value="30"/>
        <!-- 连接池中保留的最小连接数，默认为：3--> 
        <property name="minPoolSize" value="10"/> 
        <!--关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 -->   
        <property name="autoCommitOnClose" value="false"/>  
        <property name="checkoutTimeout" value="1000"/>
        <property name="acquireRetryAttempts" value="2"/>
    </bean>
	<!-- 自动扫描包中的bean （使用注解生成实例、不然要一个个配置）-->
	<!-- <context:component-scan base-package="com.gdufe"/> -->
	<context:component-scan base-package="com.gdufe"></context:component-scan>
   <!-- 扫描mapper接口（即dao），Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.gdufe.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 配置mybatis的sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mappers.xml文件 -->
		<property name="mapperLocations" value="classpath:/mappers/*.xml"></property>
		<!-- 加载mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		
	</bean>
	
	<!-- 数据库的事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置基于注解的声明式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id = "jedisPoolConfig" class = "redis.clients.jedis.JedisPoolConfig">
	</bean>
	<!--redisDao配置-->
    <bean id="redisDao" class="com.gdufe.dao.cache.RedisDao">
    	<constructor-arg index="0" ref="jedisPoolConfig"></constructor-arg>
        <constructor-arg index="1" value="localhost"/>
        <constructor-arg index="2" value="6379"/>
    </bean>
</beans>